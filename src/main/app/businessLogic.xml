<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
xmlns:json="http://www.mulesoft.org/schema/mule/json"
xmlns:spring="http://www.springframework.org/schema/beans" 
version="EE-3.5.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd">

 <batch:job name="migrateAccountsBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:input>
            <sfdc:query config-ref="SalesforceA" query="dsql:SELECT AccountNumber, AccountSource, AnnualRevenue, BillingCity, BillingCountry, BillingPostalCode, BillingState, BillingStreet, Description, DunsNumber, Fax, Industry, IsCustomerPortal, IsDeleted, IsPartner, Jigsaw, LastActivityDate, LastReferencedDate, LastViewedDate, MasterRecordId, NaicsCode, NaicsDesc, Name, NumberOfEmployees, OwnerId, Ownership, ParentId, Phone, Rating, RecordTypeId, ShippingCity, ShippingCountry, ShippingPostalCode, ShippingState, ShippingStreet, Sic, SicDesc, Site, TickerSymbol, Tradestyle, Type, Website, YearStarted FROM Account ORDER BY Name ASC" doc:name="query Accounts from Salesforce instance A" fetchSize="${page.size}"/>
        </batch:input> 
        <batch:process-records>
            <batch:step name="getAccountInBStep">
                <enricher source="#[payload]" target="#[recordVars['accountInB']]" doc:name="store result in record var 'accountInB'">
                    <sfdc:query-single config-ref="SalesforceB" query="SELECT Name, LastReferencedDate FROM Account WHERE Name = '#[payload['Name']]'" doc:name="query Account in Salesforce instance B"/>
                </enricher>
            </batch:step>
            <batch:step name="selectNewerAccountStep" filter-expression="#[recordVars['accountInB'] is NullPayload]">
                <choice doc:name="Choice">
                    <when expression="#[org.mule.kicks.util.AccountDateComparator.isAfter(payload, recordVars['accountInB'])]">
                        <expression-component doc:name="define Id in SalesForce Intance B"><![CDATA[payload['Name'] = recordVars['accountInB']['Name']

]]></expression-component>
					<logger level="INFO" message="One With #[payload]"/>
                    </when>
                    <otherwise>
                        <set-payload doc:name="set to null to skip this account" value="#[return null]"/>
					<logger level="INFO" message="One Skipped"/>
                    </otherwise>
                </choice>
            </batch:step>
            <batch:step name="createAccountsInBStep" filter-expression="#[payload is NullPayload]">
                <expression-component doc:name="remove Fields type and LastReferencedDate"><![CDATA[payload.remove('type'); 
                payload.remove('LastViewedDate');
                payload.remove('Id');
                payload.remove('IsCustomerPortal');
                payload.remove('IsDeleted');
                payload.remove('IsPartner');
                payload.remove('MasterRecordId');
                payload.remove('DunsNumber');
                payload.remove('YearStarted');
                payload.remove('Tradestyle');
                payload.remove('NaicsDesc');
                payload.remove('NaicsCode');
                payload.remove('Jigsaw');
                payload.remove('AccountNumber');
                payload.remove('LastActivityDate');
payload.remove('LastReferencedDate');]]></expression-component>
                <batch:commit size="200" doc:name="Batch Commit">
					<sfdc:upsert config-ref="SalesforceB"  type="Account" doc:name="upsert accounts in org B" externalIdFieldName="Name">
                        <sfdc:objects ref="#[payload]"/>
					</sfdc:upsert>
                    <logger level="INFO" message="HEYHEY #[payload]" doc:name="Logger"/>
                </batch:commit>
                <logger level="INFO" message="HOHO #[payload]" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <all doc:name="All">
                <processor-chain>
            		<json:object-to-json-transformer doc:name="transform BatchJobInstance to JSON"/>
            		<logger message="Migration process has finished: #[payload]" level="INFO" doc:name="log 'Migration process has finished'"/>
                </processor-chain>
				<processor-chain>
                	<json:object-to-json-transformer doc:name="transform BatchJobInstance to JSON"/>
					<smtp:outbound-endpoint host="${smtp.host}" port="${smtp.port}" user="${smtp.user}" password="${smtp.password}" to="${mail.to}" from="${mail.from}" subject="${mail.subject}" responseTimeout="10000" connector-ref="gmailConnector" doc:name="send mail"/>
				</processor-chain>
            </all>
        </batch:on-complete>
    </batch:job>
   
    <flow name="mainFlow" doc:name="mainFlow" processingStrategy="synchronous" doc:description="This flow is the entry point to the Kick business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Kick exposes to trigger it.

">
        <batch:execute name="migrateAccountsBatch" doc:name="trigger migrateAccountsBatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="catch Exception and call defaultChoiceExceptionStrategy"/>
    </flow>
    
</mule>
